<?php
/**
 * @file
 * Code for the tmi_webform feature.
 */

include_once 'tmi_webform.features.inc';

/**
 * Returns rendered HTML of a Webform Submission.
 *
 * @param int $nid
 *   The node $nid of a Webform-enabled node which created the submission.
 * @param int $sid
 *   The webform submission sid.
 *
 * @return string
 *
 */
function tmi_webform_get_submission_html($nid, $sid) {
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  $submission = webform_get_submission($nid, $sid);
  $node = node_load($nid);
  return webform_submission_render($node, $submission, NULL, 'html');
}

/**
 * Implements hook_webform_submission_insert().
 */
function tmi_webform_webform_submission_insert($node, $submission) {
  // If the Webform submission was inserted via Application Form webform node:
  if ($node->type == 'application_form') {
    // Get the uid of the user who submitted it.
    $uid = $submission->uid;
    // Get the User's Application aid.
    $aid = tmi_application_get_application_aid($uid);
    // Set the application as completed with the new $sid.
    $application = application_load($aid);
    $application->submitted($submission->sid);
  }
  // Else if was inserted via Recommend Form webform node:
  elseif ($node->type == 'recommend_form') {
    // Load the Recommendation rid from the query string.
    $rid = $_GET['rid'];
    if ($rid) {
       // Set the Recommendation as submitted.
      $recommendation = entity_load_single('recommendation', $rid);
      $recommendation->submitted($submission->sid);
    }
  }
}

/**
 * Implements hook_webform_select_options_info().
 */
function tmi_webform_webform_select_options_info() {
  $items = array();
  $items['ranking'] = array(
    'title' => t('Ranking'),
    'options callback' => 'tmi_webform_get_options_ranking',
    'file' => 'includes/webform.options.inc',
  );
  $items['gpa'] = array(
    'title' => t('GPA'),
    'options callback' => 'tmi_webform_get_options_gpa',
    'file' => 'includes/webform.options.inc',
  );
  return $items;
}

/**
 * Callback for Ranking options.
 */
function tmi_webform_get_options_ranking() {
  return array(
    'top10' => t("Top 10%"),
    'top25' => t("Top 25%"),
    'average' => t("Average"),
    'bottom25' => t("Bottom 25%"),
    'bottom10' => t("Bottom 10%"),
  );
}

/**
 * Callback for GPA options.
 */
function tmi_webform_get_options_gpa() {
  return array(
    '4.0' => "(97-100) = 4.0",
    '3.9' => "(93-96) = 4.0",
    '3.7' => "(90-92) = 3.7",
    '3.3' => "(87-89) = 3.3",
    '3.0' => "(83-86) = 3.0",
    '2.7' => "(80-82) = 2.7",
    '2.3' => "(77-79) = 2.3",
    '2.0' => "(73-76) = 2.0",
    '1.7' => "(70-72) = 1.7",
    '1.3' => "(67-69) = 1.3",
    '1.0' => "(65-66) = 1.0",
    '0.0' => "(below 65) = 0.0",
  );
}

